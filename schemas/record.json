{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "APEx Service - OGC API Record",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "The unique identifier for the APEx Service."
    },
    "type": {
      "type": "string",
      "description": "The type of the OGC API Record.",
      "enum": [
        "Feature"
      ]
    },
    "conformsTo": {
      "type": "array",
      "description": "The extensions/conformance classes used in this record.",
      "items": {
        "type": "string"
      },
      "minItems": 2,
      "uniqueItems": true,
      "anyOf": [
        {
          "contains": {
            "const": "http://www.opengis.net/spec/ogcapi-records-1/1.0/req/record-core"
          }
        }
      ],
      "oneOf": [
        {
          "contains": {
            "const": "https://apex.esa.int/core/openeo-udp"
          }
        },
        {
          "contains": {
            "const": "https://apex.esa.int/core/ogc-api-processes"
          }
        }
      ]
    },
    "geometry": {
      "type": "null"
    },
    "properties": {
      "type": "object",
      "required": [
        "created",
        "updated",
        "type",
        "title",
        "description",
        "cost_estimate",
        "cost_unit",
        "contacts",
        "themes",
        "formats"
      ],
      "properties": {
        "created": {
          "type": "string",
          "description": "Create date/time of the record."
        },
        "updated": {
          "type": "string",
          "description": "Update date/time of the record."
        },
        "type": {
          "type": "string",
          "description": "Type of the OGC API Record",
          "enum": [
            "service"
          ]
        },
        "title": {
          "type": "string",
          "description": "Title of the APEx service"
        },
        "description": {
          "type": "string",
          "description": "Description of the APEx service"
        },
        "cost_estimate": {
          "type": "number",
          "description": "Estimate of the cost for executing the service"
        },
        "cost_unit": {
          "type": "string",
          "description": "Unit for expressing the execution cost of the service"
        },
        "keywords": {
          "type": "array",
          "description": "The topic or topics of the APEx service. Typically represented using free-form keywords, tags, key phrases, or classification codes.",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "description": "The language used for textual values in this record representation.",
          "$ref": "#/properties/properties/properties/languages/items"
        },
        "languages": {
          "type": "array",
          "description": "This list of languages in which this record is available.",
          "items": {
            "type": "object",
            "description": "The language used for textual values in this record.",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "The language tag as per RFC-5646."
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "description": "The untranslated name of the language."
              },
              "alternate": {
                "type": "string",
                "description": "The name of the language in another well-understood language, usually English."
              },
              "dir": {
                "type": "string",
                "description": "The direction for text in this language. The default, `ltr` (left-to-right), represents the most common situation. However, care should be taken to set the value of `dir` appropriately if the language direction is not `ltr`. Other values supported are `rtl` (right-to-left), `ttb` (top-to-bottom), and `btt` (bottom-to-top).",
                "enum": [
                  "ltr",
                  "rtl",
                  "ttb",
                  "btt"
                ],
                "default": "ltr"
              }
            }
          }
        },
        "contacts": {
          "type": "array",
          "description": "A list of contacts qualified by their role(s) in association to the APEx service described by the record.",
          "items": {
            "type": "object",
            "description": "Identification of, and means of communication with, person responsible\nfor the APEx service.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the responsible person or team."
              },
              "position": {
                "type": "string",
                "description": "The name of the role or position of the responsible person or team taken from the organization's formal organizational hierarchy or chart."
              },
              "organization": {
                "type": "string",
                "description": "Organization/affiliation of the contact."
              },
              "logo": {
                "description": "Graphic identifying a contact. The link relation should be `icon` and the media type should be an image media type.",
                "allOf": [
                  {
                    "$ref": "#/properties/links/items"
                  },
                  {
                    "type": "object",
                    "required": [
                      "rel",
                      "type"
                    ],
                    "properties": {
                      "rel": {
                        "enum": [
                          "icon"
                        ]
                      }
                    }
                  }
                ]
              },
              "phones": {
                "type": "array",
                "description": "Telephone numbers at which contact can be made.",
                "items": {
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value is the phone number itself.",
                      "pattern": "^\\+[1-9]{1}[0-9]{3,14}$"
                    },
                    "roles": {
                      "description": "The type of phone number (e.g. home, work, fax, etc.).",
                      "$ref": "#/properties/properties/properties/contacts/items/properties/roles"
                    }
                  }
                }
              },
              "emails": {
                "type": "array",
                "description": "Email addresses at which contact can be made.",
                "items": {
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value is the email number itself.",
                      "format": "email"
                    },
                    "roles": {
                      "description": "The type of email (e.g. home, work, etc.).",
                      "$ref": "#/properties/properties/properties/contacts/items/properties/roles"
                    }
                  }
                }
              },
              "addresses": {
                "type": "array",
                "description": "Physical location at which contact can be made.",
                "items": {
                  "type": "object",
                  "properties": {
                    "deliveryPoint": {
                      "type": "array",
                      "description": "Address lines for the location.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "city": {
                      "type": "string",
                      "description": "City for the location."
                    },
                    "administrativeArea": {
                      "type": "string",
                      "description": "State or province of the location."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "ZIP or other postal code."
                    },
                    "country": {
                      "type": "string",
                      "description": "Country of the physical address.  ISO 3166-1 is recommended."
                    },
                    "roles": {
                      "description": "The type of address (e.g. office, home, etc.).",
                      "$ref": "#/properties/properties/properties/contacts/items/properties/roles"
                    }
                  }
                }
              },
              "links": {
                "type": "array",
                "description": "On-line information about the contact.",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/properties/links/items"
                    },
                    {
                      "type": "object",
                      "required": [
                        "type"
                      ]
                    }
                  ]
                }
              },
              "hoursOfService": {
                "type": "string",
                "description": "Time period when the contact can be contacted."
              },
              "contactInstructions": {
                "type": "string",
                "description": "Supplemental instructions on how or when to contact the\nresponsible party."
              },
              "roles": {
                "description": "The set of named duties, job functions and/or permissions associated with this contact. (e.g. developer, administrator, etc.).",
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "themes": {
          "type": "array",
          "description": "A knowledge organization system used to classify the APEx service.",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": [
              "concepts",
              "scheme"
            ],
            "properties": {
              "concepts": {
                "type": "array",
                "description": "One or more entity/concept identifiers from this knowledge system. it is recommended that a resolvable URI be used for each entity/concept identifier.",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for the concept."
                    },
                    "title": {
                      "type": "string",
                      "description": "A human readable title for the concept."
                    },
                    "description": {
                      "type": "string",
                      "description": "A human readable description for the concept."
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URI providing further description of the concept."
                    }
                  }
                }
              },
              "scheme": {
                "type": "string",
                "description": "An identifier for the knowledge organization system used to classify the APEx service.  It is recommended that the identifier be a resolvable URI.  The list of schemes used in a searchable catalog can be determined by inspecting the server's OpenAPI document or, if the server implements CQL2, by exposing a queryable (e.g. named `scheme`) and enumerating the list of schemes in the queryable's schema definition."
              }
            }
          }
        },
        "formats": {
          "type": "array",
          "description": "A list of available distributions of the APEx service results.",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "required": [
                  "name"
                ]
              },
              {
                "required": [
                  "mediaType"
                ]
              }
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "mediaType": {
                "type": "string"
              }
            }
          }
        },
        "license": {
          "type": "string",
          "description": "License that is applicable for the APEx service."
        }
      }
    },
    "linkTemplates": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "#/properties/links/items"
          },
          {
            "type": "object",
            "required": [
              "uriTemplate"
            ],
            "properties": {
              "uriTemplate": {
                "type": "string",
                "description": "Supplies a resolvable URI to a remote resource (or resource fragment)."
              },
              "varBase": {
                "type": "string",
                "description": "The base URI to which the variable name can be appended to retrieve the definition of the variable as a JSON Schema fragment.",
                "format": "uri"
              },
              "variables": {
                "type": "object",
                "description": "This object contains one key per substitution variable in the templated URL.  Each key defines the schema of one substitution variable using a JSON Schema fragment and can thus include things like the data type of the variable, enumerations, minimum values, maximum values, etc."
              }
            }
          }
        ]
      }
    },
    "links": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "description": "The type or semantics of the relation.",
            "enum": [
              "application",
              "service",
              "example-output",
              "example-input",
              "preview",
              "order",
              "license",
              "about",
              "webapp",
              "code",
              "thumbnail",
              "cite-as"
            ]
          },
          "type": {
            "type": "string",
            "description": "A hint indicating what the media type of the result of dereferencing the link should be."
          },
          "title": {
            "type": "string",
            "description": "Used to label the destination of a link such that it can be used as a human-readable identifier."
          },
          "href": {
            "type": "string",
            "format": "uri",
            "description": "URL pointing to an external resource."
          }
        },
        "required": [
          "rel",
          "type",
          "title",
          "href"
        ]
      },
      "minItems": 2,
      "allOf": [
        {
          "contains": {
            "type": "object",
            "properties": {
              "rel": {
                "const": "service"
              }
            }
          }
        },
        {
          "contains": {
            "type": "object",
            "properties": {
              "rel": {
                "const": "application"
              }
            }
          }
        }
      ]
    }
  }
}
